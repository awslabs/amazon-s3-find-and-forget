---

name: Unit Tests
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - edited
      - synchronize
jobs:
  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true
      # Cache
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      # Setup
      - name: Install snappy dep
        run: sudo apt-get install libsnappy-dev
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Set up Nodejs 12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Set up ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Install virtualenv
        run: pip install virtualenv
      - name: Install dependencies
        run: make setup
      - name: Install dependencies 2
        run: make setup-predeploy
      # Run Tests
      # - name: CloudFormation unit tests
      #   run: make test-cfn
      # - name: Backend unit tests
      #   run: make test-unit
      #   env:
      #     AWS_DEFAULT_REGION: eu-west-1
      # - name: Frontend unit tests
      #   run: make test-frontend
      - name: Test Setup Version Script
        id: versionsetup
        run: |
          function version { echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'; }
          echo ::set-env name=THIS_VERSION::$(version $(make version | sed s/^v//))
          echo ::set-env name=LATEST::$(version $(git describe --tags $(git rev-list --tags --max-count=1) | sed s/^v// 2> /dev/null || echo '0'))
          echo $THIS_VERSION
          echo $LATEST
      - name: Test Setup Version 1
        id: versiontest
        run: echo "Needs update"
        if: env.THIS_VERSION > env.LATEST
